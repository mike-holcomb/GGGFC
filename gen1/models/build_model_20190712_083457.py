def build_model_20190712_083457(num_channels):
    y0 = Input(shape=(32,32,3))
    y1 = Conv2D(1*num_channels, (1,1), padding='same', use_bias=False)(y0)
    y2 = BatchNormalization()(y1)
    y3 = LeakyReLU()(y2)
    y4 = Conv2D(1*num_channels, (3,3), padding='same', use_bias=False)(y3)
    y5 = BatchNormalization()(y4)
    y6 = LeakyReLU()(y5)
    y7 = Conv2D(1*num_channels, (3,3), padding='same', use_bias=False)(y6)
    y8 = BatchNormalization()(y7)
    y9 = LeakyReLU()(y8)
    y10 = Conv2D(1*num_channels, (3,3), padding='same', use_bias=False)(y9)
    y11 = BatchNormalization()(y10)
    y12 = LeakyReLU()(y11)
    y13 = Conv2D(1*num_channels, (1,1), padding='same', use_bias=False)(y6)
    y14 = BatchNormalization()(y13)
    y15 = LeakyReLU()(y14)
    y16 = Conv2D(1*num_channels, (3,3), padding='same', use_bias=False)(y15)
    y17 = BatchNormalization()(y16)
    y18 = LeakyReLU()(y17)
    y19 = Conv2D(1*num_channels, (1,1), padding='same', use_bias=False)(y18)
    y20 = BatchNormalization()(y19)
    y21 = LeakyReLU()(y20)
    y22 = Conv2D(1*num_channels, (3,3), padding='same', use_bias=False)(y21)
    y23 = BatchNormalization()(y22)
    y24 = LeakyReLU()(y23)
    y25 = Add()([y24, y18])
    y26 = Conv2D(1*num_channels, (3,3), padding='same', use_bias=False)(y6)
    y27 = BatchNormalization()(y26)
    y28 = Conv2D(1*num_channels, (3,3), padding='same', use_bias=False)(y27)
    y29 = BatchNormalization()(y28)
    y30 = LeakyReLU()(y29)
    y31 = Conv2D(1*num_channels, (1,1), padding='same', use_bias=False)(y6)
    y32 = BatchNormalization()(y31)
    y33 = LeakyReLU()(y32)
    y34 = Conv2D(1*num_channels, (3,3), padding='same', use_bias=False)(y33)
    y35 = BatchNormalization()(y34)
    y36 = LeakyReLU()(y35)
    y37 = Conv2D(1*num_channels, (3,3), padding='same', use_bias=False)(y36)
    y38 = BatchNormalization()(y37)
    y39 = LeakyReLU()(y38)
    y40 = Add()([y39, y36])
    y41 = Concatenate()([y12, y25, y30, y40])
    y42 = Conv2D(8*num_channels, (3,3), (2,2), padding='same', use_bias=False)(y41)
    y43 = BatchNormalization()(y42)
    y44 = LeakyReLU()(y43)
    y45 = Conv2D(8*num_channels, (3,3), padding='same', use_bias=False)(y44)
    y46 = BatchNormalization()(y45)
    y47 = LeakyReLU()(y46)
    y48 = Conv2D(8*num_channels, (1,1), padding='same', use_bias=False)(y47)
    y49 = BatchNormalization()(y48)
    y50 = LeakyReLU()(y49)
    y51 = Conv2D(8*num_channels, (3,3), padding='same', use_bias=False)(y50)
    y52 = BatchNormalization()(y51)
    y53 = LeakyReLU()(y52)
    y54 = Conv2D(8*num_channels, (3,3), padding='same', use_bias=False)(y47)
    y55 = BatchNormalization()(y54)
    y56 = Conv2D(8*num_channels, (3,3), padding='same', use_bias=False)(y55)
    y57 = BatchNormalization()(y56)
    y58 = LeakyReLU()(y57)
    y59 = Conv2D(8*num_channels, (1,1), padding='same', use_bias=False)(y47)
    y60 = BatchNormalization()(y59)
    y61 = LeakyReLU()(y60)
    y62 = Conv2D(8*num_channels, (3,3), padding='same', use_bias=False)(y61)
    y63 = BatchNormalization()(y62)
    y64 = LeakyReLU()(y63)
    y65 = Conv2D(8*num_channels, (1,1), padding='same', use_bias=False)(y47)
    y66 = BatchNormalization()(y65)
    y67 = LeakyReLU()(y66)
    y68 = Conv2D(8*num_channels, (3,3), padding='same', use_bias=False)(y67)
    y69 = BatchNormalization()(y68)
    y70 = LeakyReLU()(y69)
    y71 = Concatenate()([y53, y58, y64, y70])
    y72 = Conv2D(64*num_channels, (3,3), (2,2), padding='same', use_bias=False)(y71)
    y73 = BatchNormalization()(y72)
    y74 = LeakyReLU()(y73)
    y75 = Conv2D(64*num_channels, (1,1), padding='same', use_bias=False)(y74)
    y76 = BatchNormalization()(y75)
    y77 = LeakyReLU()(y76)
    y78 = Conv2D(64*num_channels, (3,3), padding='same', use_bias=False)(y77)
    y79 = BatchNormalization()(y78)
    y80 = LeakyReLU()(y79)
    y81 = Conv2D(64*num_channels, (3,3), padding='same', use_bias=False)(y80)
    y82 = BatchNormalization()(y81)
    y83 = Conv2D(64*num_channels, (3,3), padding='same', use_bias=False)(y82)
    y84 = BatchNormalization()(y83)
    y85 = LeakyReLU()(y84)
    y86 = MaxPooling2D(2,2,padding='same')(y85)
    y87 = Conv2D(128*num_channels, (3,3), padding='same', use_bias=False)(y86)
    y88 = BatchNormalization()(y87)
    y89 = LeakyReLU()(y88)
    y90 = Conv2D(128*num_channels, (3,3), padding='same', use_bias=False)(y89)
    y91 = BatchNormalization()(y90)
    y92 = LeakyReLU()(y91)
    y93 = GlobalMaxPooling2D()(y92)
    y94 = Flatten()(y93)
    y95 = Dense(10, activation="softmax")(y94)
    y96 =  (y95)
    return Model(inputs=y0, outputs=y96)