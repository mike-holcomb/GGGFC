def build_model_20190714_150409(num_channels):
    y0 = Input(shape=(32,32,3))
    y1 = Conv2D(1*num_channels, (3,3), padding='same', use_bias=False)(y0)
    y2 = BatchNormalization()(y1)
    y3 = Conv2D(1*num_channels, (3,3), padding='same', use_bias=False)(y2)
    y4 = BatchNormalization()(y3)
    y5 = LeakyReLU()(y4)
    y6 = Conv2D(1*num_channels, (1,1), padding='same', use_bias=False)(y5)
    y7 = BatchNormalization()(y6)
    y8 = LeakyReLU()(y7)
    y9 = Conv2D(1*num_channels, (3,3), padding='same', use_bias=False)(y8)
    y10 = BatchNormalization()(y9)
    y11 = LeakyReLU()(y10)
    y12 = Conv2D(1*num_channels, (3,3), padding='same', use_bias=False)(y11)
    y13 = BatchNormalization()(y12)
    y14 = LeakyReLU()(y13)
    y15 = Conv2D(1*num_channels, (3,3), padding='same', use_bias=False)(y14)
    y16 = BatchNormalization()(y15)
    y17 = LeakyReLU()(y16)
    y18 = Concatenate()([y17, y11])
    y19 = MaxPooling2D(2,2,padding='same')(y18)
    y20 = Conv2D(4*num_channels, (3,3), padding='same', use_bias=False)(y19)
    y21 = BatchNormalization()(y20)
    y22 = Conv2D(4*num_channels, (3,3), padding='same', use_bias=False)(y21)
    y23 = BatchNormalization()(y22)
    y24 = LeakyReLU()(y23)
    y25 = Conv2D(4*num_channels, (1,1), padding='same', use_bias=False)(y24)
    y26 = BatchNormalization()(y25)
    y27 = LeakyReLU()(y26)
    y28 = Conv2D(4*num_channels, (3,3), padding='same', use_bias=False)(y27)
    y29 = BatchNormalization()(y28)
    y30 = LeakyReLU()(y29)
    y31 = Conv2D(4*num_channels, (3,3), padding='same', use_bias=False)(y24)
    y32 = BatchNormalization()(y31)
    y33 = LeakyReLU()(y32)
    y34 = Conv2D(4*num_channels, (3,3), padding='same', use_bias=False)(y33)
    y35 = BatchNormalization()(y34)
    y36 = LeakyReLU()(y35)
    y37 = Add()([y36, y33])
    y38 = Concatenate()([y30, y37])
    y39 = MaxPooling2D(2,2,padding='same')(y38)
    y40 = Conv2D(16*num_channels, (3,3), padding='same', use_bias=False)(y39)
    y41 = BatchNormalization()(y40)
    y42 = Conv2D(16*num_channels, (3,3), padding='same', use_bias=False)(y41)
    y43 = BatchNormalization()(y42)
    y44 = LeakyReLU()(y43)
    y45 = Conv2D(16*num_channels, (3,3), padding='same', use_bias=False)(y44)
    y46 = BatchNormalization()(y45)
    y47 = LeakyReLU()(y46)
    y48 = Conv2D(16*num_channels, (3,3), padding='same', use_bias=False)(y44)
    y49 = BatchNormalization()(y48)
    y50 = Conv2D(16*num_channels, (3,3), padding='same', use_bias=False)(y49)
    y51 = BatchNormalization()(y50)
    y52 = LeakyReLU()(y51)
    y53 = Conv2D(16*num_channels, (3,3), padding='same', use_bias=False)(y44)
    y54 = BatchNormalization()(y53)
    y55 = LeakyReLU()(y54)
    y56 = Conv2D(16*num_channels, (3,3), padding='same', use_bias=False)(y44)
    y57 = BatchNormalization()(y56)
    y58 = Conv2D(16*num_channels, (3,3), padding='same', use_bias=False)(y57)
    y59 = BatchNormalization()(y58)
    y60 = LeakyReLU()(y59)
    y61 = Concatenate()([y47, y52, y55, y60])
    y62 = Conv2D(128*num_channels, (3,3), (2,2), padding='same', use_bias=False)(y61)
    y63 = BatchNormalization()(y62)
    y64 = LeakyReLU()(y63)
    y65 = Conv2D(128*num_channels, (3,3), padding='same', use_bias=False)(y64)
    y66 = BatchNormalization()(y65)
    y67 = LeakyReLU()(y66)
    y68 = Conv2D(128*num_channels, (3,3), padding='same', use_bias=False)(y67)
    y69 = BatchNormalization()(y68)
    y70 = LeakyReLU()(y69)
    y71 = Conv2D(128*num_channels, (1,1), padding='same', use_bias=False)(y67)
    y72 = BatchNormalization()(y71)
    y73 = LeakyReLU()(y72)
    y74 = Conv2D(128*num_channels, (3,3), padding='same', use_bias=False)(y73)
    y75 = BatchNormalization()(y74)
    y76 = LeakyReLU()(y75)
    y77 = Conv2D(128*num_channels, (3,3), padding='same', use_bias=False)(y67)
    y78 = BatchNormalization()(y77)
    y79 = Conv2D(128*num_channels, (3,3), padding='same', use_bias=False)(y78)
    y80 = BatchNormalization()(y79)
    y81 = LeakyReLU()(y80)
    y82 = Conv2D(128*num_channels, (1,1), padding='same', use_bias=False)(y67)
    y83 = BatchNormalization()(y82)
    y84 = LeakyReLU()(y83)
    y85 = Conv2D(128*num_channels, (3,3), padding='same', use_bias=False)(y84)
    y86 = BatchNormalization()(y85)
    y87 = LeakyReLU()(y86)
    y88 = Concatenate()([y70, y76, y81, y87])
    y89 = GlobalAveragePooling2D()(y88)
    y90 = Flatten()(y89)
    y91 = Dense(1024, use_bias=False)(y90)
    y92 = BatchNormalization()(y91)
    y93 = LeakyReLU()(y92)
    y94 = Dense(10, activation="softmax")(y93)
    y95 =  (y94)
    return Model(inputs=y0, outputs=y95)